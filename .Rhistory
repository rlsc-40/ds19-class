#plotting Biketown trip data with Base R
install.packages(tidyverse)
#plotting Biketown trip data with Base R
install.packages("tidyverse")
library(tidyverse)
#plotting Biketown trip data with Base R
install.packages("tidyverse") #just for installing, won't need again
library(tidyverse)
#plotting Biketown trip data with Base R
install.packages("tidyverse") #just for installing, won't need again
biketown <- read.csv("data/biketown-2018-trips.csv")
library(tidyverse)
install.packages("ggplot2")
str(biketown)
summary(biketown)
install.packages("ggplot2") #also didn't work - keeps asking about compilation pkgs
library(ggplot2)
install.packages("ggplot2") #also didn't work - keeps asking about compilation pkgs
#plotting Biketown trip data with Base R
install.packages("tidyverse") #just for installing, won't need again
library(tidyverse) #not working!
library(ggplot2)
library("ggplot2")
library("dplyr")
install.packages("dplyr")
library("dplyr")
install.packages("tidyverse")
library(tidyverse) #not working!
library(lubridate)
biketown$hour <-
hms(biketown$StartTime) %>%
hour()
table(biketown$hour)
View(biketown)
#hms --> hour, minute, second; we extracted the hour
freq_by_hr <- table(biketown$hour)
barplot(freq_by_hr)
barplot(40000,freq_by_hr)
barplot(freq_by_hr)
View(biketown)
barplot(biketown$Month)
freq_by_month <- table(biketown$month)
barplot(freq_by_month)
hist(biketown$hour)
hist(biketown$hour, breaks = seq(0, 24, 3))
# focus on a.m. peak
am_peak <- subset(biketown, hour >= 7 & hour < 10)
View(am_peak)
View(am_peak)
hist(am_peak)
hist(am_peak$hour)
hist(am_peak$hour, breaks = seq(7, 10, 1))
barplot(table(am_peak$hour))
# the comma indicates a condition; can accomplish the same using the brackets like day 1
pm_peak <- biketown[levels(biketown$hour) >= 16 & hour < 20, ]
pm_peak <- biketown[(biketown$hour) >= 16 & hour < 20, ]
pm_peak <- subset(biketown, hour >= 16 & hour < 20)
hist(pm_peak$hour)
View(biketown)
biketown$month <-
mdy(biketown$StartDate) %>%
month(label = T, abbr = T)
str(biketown$month)
# looking at seasonal patterns
freq_by_month <- table(biketown$month)
barplot(freq_by_month) # gives to us in alphabetical order, was brought in as a factor
summary(biketown)
str(biketown)
freq_by_station <- table(biketown$StartHub)
# top 25 stations
s <- sort(freq_by_station, decreasing = T)
top25 <- s[1:25]
# could have written: top25 <- sort(freq_by_station, decreasing = T)
dotchart(top25)
